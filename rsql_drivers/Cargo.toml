[package]
authors.workspace = true
categories.workspace = true
description = "rsql drivers library for accessing databases"
edition.workspace = true
keywords.workspace = true
license.workspace = true
name = "rsql_drivers"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[dependencies]
async-trait = { workspace = true, optional = true }
aws-credential-types = { workspace = true, optional = true }
aws-config = { workspace = true, optional = true }
aws-sdk-s3 = { workspace = true, optional = true }
file_type = { workspace = true }
futures-util = { workspace = true, optional = true }
reqwest = { workspace = true, features = ["json", "gzip"], optional = true }
rsql_driver = { path = "../rsql_driver", version = "0.17.1" }
rsql_driver_arrow = { path = "../drivers/arrow", optional = true, version = "0.17.1" }
rsql_driver_avro = { path = "../drivers/avro", optional = true, version = "0.17.1" }
rsql_driver_cockroachdb = { path = "../drivers/cockroachdb", optional = true, version = "0.17.1" }
rsql_driver_csv = { path = "../drivers/csv", optional = true, version = "0.17.1" }
rsql_driver_delimited = { path = "../drivers/delimited", optional = true, version = "0.17.1" }
rsql_driver_duckdb = { path = "../drivers/duckdb", optional = true, version = "0.17.1" }
rsql_driver_excel = { path = "../drivers/excel", optional = true, version = "0.17.1" }
rsql_driver_json = { path = "../drivers/json", optional = true, version = "0.17.1" }
rsql_driver_jsonl = { path = "../drivers/jsonl", optional = true, version = "0.17.1" }
rsql_driver_libsql = { path = "../drivers/libsql", optional = true, version = "0.17.1" }
rsql_driver_mariadb = { path = "../drivers/mariadb", optional = true, version = "0.17.1" }
rsql_driver_mysql = { path = "../drivers/mysql", optional = true, version = "0.17.1" }
rsql_driver_ods = { path = "../drivers/ods", optional = true, version = "0.17.1" }
rsql_driver_parquet = { path = "../drivers/parquet", optional = true, version = "0.17.1" }
rsql_driver_postgres = { path = "../drivers/postgres", optional = true, version = "0.17.1" }
rsql_driver_postgresql = { path = "../drivers/postgresql", optional = true, version = "0.17.1" }
rsql_driver_redshift = { path = "../drivers/redshift", optional = true, version = "0.17.1" }
rsql_driver_rusqlite = { path = "../drivers/rusqlite", optional = true, version = "0.17.1" }
rsql_driver_snowflake = { path = "../drivers/snowflake", optional = true, version = "0.17.1" }
rsql_driver_sqlite = { path = "../drivers/sqlite", optional = true, version = "0.17.1" }
rsql_driver_sqlserver = { path = "../drivers/sqlserver", optional = true, version = "0.17.1" }
rsql_driver_tsv = { path = "../drivers/tsv", optional = true, version = "0.17.1" }
rsql_driver_xml = { path = "../drivers/xml", optional = true, version = "0.17.1" }
rsql_driver_yaml = { path = "../drivers/yaml", optional = true, version = "0.17.1" }
tempfile = { workspace = true, optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs"], optional = true }
tracing = { workspace = true }
url = { workspace = true }

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
getrandom = { workspace = true, features = ["js"] }

[dev-dependencies]
indoc = { workspace = true }
rsql_driver_test_utils = { path = "../drivers/test_utils", version = "0.17.1" }
testcontainers-modules = { workspace = true, features = ["localstack"] }
tokio = { workspace = true, features = ["macros", "rt"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

[features]
all = [
    "arrow",
    "avro",
    "cockroachdb",
    "csv",
    "delimited",
    "duckdb",
    "excel",
    "file",
    "http",
    "https",
    "json",
    "jsonl",
    "mariadb",
    "mysql",
    "ods",
    "parquet",
    "postgres",
    "postgresql",
    "redshift",
    "rusqlite",
    "s3",
    "snowflake",
    "sqlite",
    "sqlserver",
    "tsv",
    "xml",
    "yaml",
]
default = []
arrow = ["dep:rsql_driver_arrow"]
avro = ["dep:rsql_driver_avro"]
cockroachdb = ["dep:rsql_driver_cockroachdb"]
csv = ["dep:rsql_driver_csv"]
delimited = ["dep:rsql_driver_delimited"]
duckdb = ["dep:rsql_driver_duckdb"]
excel = ["dep:rsql_driver_excel"]
file = [
    "dep:async-trait",
]
http = [
    "https",
    "dep:async-trait",
]
https = [
    "file",
    "dep:futures-util",
    "dep:reqwest",
    "dep:tempfile",
    "dep:tokio",
]
json = ["dep:rsql_driver_json"]
jsonl = ["dep:rsql_driver_jsonl"]
libsql = ["dep:rsql_driver_libsql"]
mariadb = ["dep:rsql_driver_mariadb"]
mysql = ["dep:rsql_driver_mysql"]
native-tls = [
    "reqwest/native-tls",
    "rsql_driver_cockroachdb/native-tls",
    "rsql_driver_mariadb/native-tls",
    "rsql_driver_mysql/native-tls",
    "rsql_driver_postgres/native-tls",
    "rsql_driver_postgresql/native-tls",
    "rsql_driver_redshift/native-tls",
    "rsql_driver_sqlite/native-tls",
]
ods = ["dep:rsql_driver_ods"]
parquet = ["dep:rsql_driver_parquet"]
postgres = ["dep:rsql_driver_postgres"]
postgresql = ["dep:rsql_driver_postgresql"]
redshift = ["dep:rsql_driver_redshift"]
rusqlite = ["dep:rsql_driver_rusqlite"]
rustls = [
    "reqwest/rustls-tls-native-roots",
    "rsql_driver_cockroachdb/rustls",
    "rsql_driver_mariadb/rustls",
    "rsql_driver_mysql/rustls",
    "rsql_driver_postgres/rustls",
    "rsql_driver_postgresql/rustls",
    "rsql_driver_redshift/rustls",
    "rsql_driver_sqlite/rustls",
]
s3 = [
    "file",
    "dep:aws-credential-types",
    "dep:aws-config",
    "dep:aws-sdk-s3",
]
snowflake = ["dep:rsql_driver_snowflake"]
sqlite = ["dep:rsql_driver_sqlite"]
sqlserver = ["dep:rsql_driver_sqlserver"]
tsv = ["dep:rsql_driver_tsv"]
xml = ["dep:rsql_driver_xml"]
yaml = ["dep:rsql_driver_yaml"]

[lints.clippy]
unwrap_used = "deny"

[package.metadata.docs.rs]
features = []
targets = ["x86_64-unknown-linux-gnu"]
